// Code generated by github.com/douyu/jupiter/cmd/protoc-gen-go-fieldmask. DO NOT EDIT.
// versions:
// - protoc-gen-go-fieldmask v0.11.4
// - protoc             (unknown)

package helloworldv1

import (
	xfieldmask "github.com/douyu/jupiter/pkg/util/xfieldmask"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the github.com/douyu/jupiter/cmd/protoc-gen-go-fieldmask package it is being compiled against.
var _ = fieldmaskpb.New
var _ = xfieldmask.New

func (x *SayHelloRequest) fieldMaskWithMode(mode xfieldmask.MaskMode) *SayHelloRequest_FieldMask {
	fm := &SayHelloRequest_FieldMask{
		maskMode: mode,
		maskIn:   xfieldmask.New(_fm_SayHelloRequestMaskIn),
		maskOut:  xfieldmask.New(_fm_SayHelloRequestMaskOut),
	}

	return fm
}

// FieldMask_Filter generates *SayHelloRequest FieldMask with filter mode, so that
// only the fields in the SayHelloRequest.UpdateMask will be
// appended into the SayHelloRequest.
func (x *SayHelloRequest) FieldMaskFilter() *SayHelloRequest_FieldMask {
	return x.fieldMaskWithMode(xfieldmask.MaskMode_Filter)
}

// FieldMask_Prune generates *SayHelloRequest FieldMask with prune mode, so that
// only the fields NOT in the SayHelloRequest.UpdateMask will be
// appended into the SayHelloRequest.
func (x *SayHelloRequest) FieldMaskPrune() *SayHelloRequest_FieldMask {
	return x.fieldMaskWithMode(xfieldmask.MaskMode_Prune)
}

// SayHelloRequest_FieldMask provide helper functions to deal with FieldMask.
type SayHelloRequest_FieldMask struct {
	maskMode xfieldmask.MaskMode
	maskIn   xfieldmask.NestedFieldMask
	maskOut  xfieldmask.NestedFieldMask
}

// _fm_SayHelloRequest is built in variable for SayHelloRequest to call FieldMask.Append
var _fm_SayHelloRequest = new(SayHelloRequest)
var _fm_SayHelloRequestMaskIn = make([]string, 0)

// MaskInName append Name into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskInName() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloRequest, "name")
	if err == nil {
		_fm_SayHelloRequestMaskIn = append(_fm_SayHelloRequestMaskIn, "name")
	}

	return x
}

// MaskedInName indicates the field Name exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedInName() bool {
	if x.maskIn == nil {
		return true
	}

	return x.maskIn.Masked("name")
}

// MaskInType append Type into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskInType() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloRequest, "type")
	if err == nil {
		_fm_SayHelloRequestMaskIn = append(_fm_SayHelloRequestMaskIn, "type")
	}

	return x
}

// MaskedInType indicates the field Type exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedInType() bool {
	if x.maskIn == nil {
		return true
	}

	return x.maskIn.Masked("type")
}

// _fm_SayHelloResponse is built in variable for SayHelloResponse to call FieldMask.Append
var _fm_SayHelloResponse = new(SayHelloResponse)
var _fm_SayHelloRequestMaskOut = make([]string, 0)

// MaskOutError append Error into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutError() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "error")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "error")
	}

	return x
}

// MaskedOutError indicates the field Error exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutError() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("error")
}

// MaskOutMsg append Msg into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutMsg() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "msg")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "msg")
	}

	return x
}

// MaskedOutMsg indicates the field Msg exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutMsg() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("msg")
}

// MaskOutData append Data into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutData() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data")
	}

	return x
}

// MaskedOutData indicates the field Data exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutData() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data")
}

// MaskOutDataName append DataName into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataName() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.name")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.name")
	}

	return x
}

// MaskedOutDataName indicates the field DataName exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataName() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.name")
}

// MaskOutDataAgeNumber append DataAgeNumber into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataAgeNumber() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.age_number")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.age_number")
	}

	return x
}

// MaskedOutDataAgeNumber indicates the field DataAgeNumber exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataAgeNumber() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.age_number")
}

// MaskOutDataSex append DataSex into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataSex() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.sex")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.sex")
	}

	return x
}

// MaskedOutDataSex indicates the field DataSex exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataSex() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.sex")
}

// MaskOutDataMetadata append DataMetadata into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataMetadata() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.metadata")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.metadata")
	}

	return x
}

// MaskedOutDataMetadata indicates the field DataMetadata exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataMetadata() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.metadata")
}

// MaskOutDataMetadataKey append DataMetadataKey into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataMetadataKey() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.metadata.key")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.metadata.key")
	}

	return x
}

// MaskedOutDataMetadataKey indicates the field DataMetadataKey exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataMetadataKey() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.metadata.key")
}

// MaskOutDataMetadataValue append DataMetadataValue into SayHelloRequest.UpdateMask.
func (x *SayHelloRequest) MaskOutDataMetadataValue() *SayHelloRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayHelloResponse, "data.metadata.value")
	if err == nil {
		_fm_SayHelloRequestMaskOut = append(_fm_SayHelloRequestMaskOut, "data.metadata.value")
	}

	return x
}

// MaskedOutDataMetadataValue indicates the field DataMetadataValue exists in the SayHelloRequest.UpdateMask or not.
func (x *SayHelloRequest_FieldMask) MaskedOutDataMetadataValue() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.metadata.value")
}

// Mask only affects the fields in the SayHelloRequest.
func (x *SayHelloRequest_FieldMask) Mask(m *SayHelloResponse) *SayHelloResponse {
	switch x.maskMode {
	case xfieldmask.MaskMode_Filter:
		x.maskOut.Filter(m)
	case xfieldmask.MaskMode_Prune:
		x.maskOut.Prune(m)
	}

	return m
}
